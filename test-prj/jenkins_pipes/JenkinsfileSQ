pipeline {
    // agent any
    agent {
        kubernetes {
            yaml """
            apiVersion: v1
            kind: Pod
            metadata:
              name: myagent
              labels:
                some-label: some-label-value
            spec:
              containers:
                - name: jnlp
                  image: docker.io/sennar19/personal_agent:3.0.1
                  args: ['\$(JENKINS_SECRET)', '\$(JENKINS_NAME)']
                  tty: true
            """
        }
    }
    stages {
        stage('Install dependencies') {
            steps {
                script {
                    echo 'Install dependencies...'
                    sh 'whoami'
                    sh 'pwd'
                    sh 'ls'
                }
            }
        }
        stage('SonarQube analysis') {
            steps {
                script {
                    env.SONAR_SCANNER_VERSION = '6.2.1.4610'
                    env.SONAR_SCANNER_HOME = "${env.HOME}/.sonar/sonar-scanner-${env.SONAR_SCANNER_VERSION}-linux-x64"
                    withSonarQubeEnv('SonarQube Cloud') {
                        sh "curl --create-dirs -sSLo ${env.HOME}/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${env.SONAR_SCANNER_VERSION}-linux-x64.zip"
                        sh "unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/"
                        sh "export PATH=${env.SONAR_SCANNER_HOME}/bin:\$PATH"
                        sh 'export SONAR_SCANNER_OPTS="-server"'
                        sh "sonar-scanner -Dsonar.organization=sennar19 -Dsonar.projectKey=sennar19_test-prj-personal-gitlab -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io"
                        sh 'pwd'
                        sh 'ls'
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    echo 'Deploying to production server...'
                }
            }
        }
        stage('Clean Workspace') {
            steps {
                script {
                    echo 'Cleaning workspace...'
                    deleteDir()
                }
            }
        }
    }
}